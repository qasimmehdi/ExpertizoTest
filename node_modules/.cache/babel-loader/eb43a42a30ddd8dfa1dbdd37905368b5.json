{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/abc-app/Personal/React-Test/expertizo-test/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ProgressBar from \"./qiz/progress-bar\";\nimport questions from \"./questions.json\";\nimport \"./App.css\";\nimport Difficulty from \"./qiz/difficulty\";\n\nfunction App() {\n  _s();\n\n  const [i, setI] = useState(0);\n  const [showResult, setShowResult] = useState(false);\n  const [optionsDisabled, setOptionsDisabled] = useState(false);\n  const [result, setResult] = useState(\"\");\n  const [randomOptions, setRandomOptions] = useState([...makeOptions(questions[0].correct_answer, questions[0].incorrect_answers)]);\n\n  const onOptionSelect = e => {\n    setOptionsDisabled(true);\n    e.target.classList.add(\"selected\");\n\n    if (e.target.value === questions[i].correct_answer) {\n      setResult(\"Correct\");\n    } else {\n      setResult(\"Sorry!\");\n    }\n\n    setShowResult(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ProgressBar, {\n      width: \"10vw\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Question \", i + 1, \" of \", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: unescape(questions[0].category)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Difficulty, {\n        level: questions[0].difficulty\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: unescape(questions[0].question)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options\",\n        children: randomOptions.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"answer-button-div\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: optionsDisabled,\n            className: \"answer-button\",\n            value: item,\n            onClick: e => onOptionSelect(e),\n            children: unescape(item)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)\n        }, item, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), showResult && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: result\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"answer-button\",\n          style: {\n            width: \"fit-content\"\n          },\n          type: \"submit\",\n          children: \"Next Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"tqRALKT+aXnZcsDf4JT6SUBNrPI=\");\n\n_c = App;\n\nfunction makeOptions(correctOption, incorrectOptions) {\n  return shuffle([...incorrectOptions, correctOption]);\n}\n\nfunction shuffle(array) {\n  var currentIndex = array.length,\n      temporaryValue,\n      randomIndex;\n\n  while (0 !== currentIndex) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n}\n\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/abc-app/Personal/React-Test/expertizo-test/src/App.js"],"names":["React","useState","ProgressBar","questions","Difficulty","App","i","setI","showResult","setShowResult","optionsDisabled","setOptionsDisabled","result","setResult","randomOptions","setRandomOptions","makeOptions","correct_answer","incorrect_answers","onOptionSelect","e","target","classList","add","value","length","unescape","category","difficulty","question","map","item","width","correctOption","incorrectOptions","shuffle","array","currentIndex","temporaryValue","randomIndex","Math","floor","random"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport ProgressBar from \"./qiz/progress-bar\";\nimport questions from \"./questions.json\";\nimport \"./App.css\";\nimport Difficulty from \"./qiz/difficulty\";\n\nfunction App() {\n  const [i, setI] = useState(0);\n  const [showResult, setShowResult] = useState(false);\n  const [optionsDisabled, setOptionsDisabled] = useState(false);\n  const [result, setResult] = useState(\"\");\n  const [randomOptions, setRandomOptions] = useState([\n    ...makeOptions(questions[0].correct_answer, questions[0].incorrect_answers),\n  ]);\n\n  const onOptionSelect = (e) => {\n    setOptionsDisabled(true);\n    e.target.classList.add(\"selected\");\n    if (e.target.value === questions[i].correct_answer) {\n      setResult(\"Correct\");\n    } else {\n      setResult(\"Sorry!\");\n    }\n    setShowResult(true);\n  };\n\n  return (\n    <div>\n      <ProgressBar width=\"10vw\" />\n      <div className=\"center\">\n        <h1>\n          Question {i + 1} of {questions.length}\n        </h1>\n        <p>{unescape(questions[0].category)}</p>\n\n        <Difficulty level={questions[0].difficulty} />\n\n        <p>{unescape(questions[0].question)}</p>\n        <div className=\"options\">\n          {randomOptions.map((item) => (\n            <div key={item} className=\"answer-button-div\">\n              <button\n                disabled={optionsDisabled}\n                className=\"answer-button\"\n                value={item}\n                onClick={(e) => onOptionSelect(e)}\n              >\n                {unescape(item)}\n              </button>\n            </div>\n          ))}\n        </div>\n        {showResult && (\n          <div className=\"result\">\n            <h2>{result}</h2>\n            <button\n              className=\"answer-button\"\n              style={{ width: \"fit-content\" }}\n              type=\"submit\"\n            >\n              Next Question\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction makeOptions(correctOption, incorrectOptions) {\n  return shuffle([...incorrectOptions, correctOption]);\n}\n\nfunction shuffle(array) {\n  var currentIndex = array.length,\n    temporaryValue,\n    randomIndex;\n\n  while (0 !== currentIndex) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}